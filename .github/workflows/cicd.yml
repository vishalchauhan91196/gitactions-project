name: Java CI/CD Pipeline with Security Checks

on:
  workflow_dispatch:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  JAVA_VERSION: '11'
  DISTRO: 'adopt'
  ARTIFACT_NAME: 'vjsarjavaapp'

jobs:
  security-gitleaks:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Install & Run Gitleaks
        run: |
          sudo apt-get update
          sudo apt-get install -y gitleaks
          gitleaks detect --source . --report-format json --report-path=gitleaks-report.json

  security-snyk:
    runs-on: ubuntu-latest
    needs: security-gitleaks
    steps:
      - uses: actions/checkout@v4

      - name: Run Snyk to check for vulnerabilities
        uses: snyk/actions/maven-3-jdk-11@master
        continue-on-error: true
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        with:
          command: code test
          args: --sarif-file-output=snyk.sarif

      - name: Count total number of vulnerabilities
        run: |
          RESULTS_LENGTH=$(jq '.runs[0].results | length' snyk.sarif)
          echo "RESULTS_LENGTH=$RESULTS_LENGTH" >> $GITHUB_ENV
          echo $RESULTS_LENGTH

      - name: Pass_or_Fail_the_job
        run: |
            if [ "$RESULTS_LENGTH" != 0 ]; then
                echo "Job Failed"
                exit 1
            else
                echo "Pass"
            fi

  build-and-test:
    runs-on: ubuntu-latest
    needs: security-snyk
    steps:
      - uses: actions/checkout@v4

      - name: Set up JDK ${{ env.JAVA_VERSION }}
        uses: actions/setup-java@v4
        with:
          java-version: ${{ env.JAVA_VERSION }}
          distribution: ${{ env.DISTRO }}
          cache: maven

      - name: Build, Compile, and Test
        run: mvn clean install -f pom.xml

      - name: Upload JAR artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.ARTIFACT_NAME }}
          path: ${{ github.workspace }}  

  deploy:
    name: Deploy to Azure
    runs-on: ubuntu-latest
    needs: build-and-test

    outputs:
      webapp-url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}

    steps:
      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: ${{ env.ARTIFACT_NAME }}
          path: ${{ github.workspace }}

      - name: Deploy to Azure Web App
        id: deploy-to-webapp
        uses: azure/webapps-deploy@v3
        with:
          app-name: 'vjsarjavaapp'
          publish-profile: ${{ secrets.AZUREAPPSERVICE_PUBLISHPROFILE }}
          package: '*.jar'

  security-dast:
    runs-on: ubuntu-latest
    needs: deploy
    steps:
      - name: Run ZAP Baseline DAST Scan
        uses: zaproxy/action-baseline@v0.10.0
        with:
          target: ${{ needs.deploy.outputs.webapp-url }}
        continue-on-error: true

      - name: Upload ZAP Report
        uses: actions/upload-artifact@v4
        with:
          name: zap-report
          path: zap-report.html
